# Release branches will be ignored
branches:
  except:
    - /^release.*$/

# Host Environment
os: linux

# Build Environment
dist: bionic
language: java
cache:
  directories:
    - $HOME/.m2

# Prerequisites
before_install:
  # Setup maven settings-security.xml for nexus staging
  - openssl aes-256-cbc -K $encrypted_XXXXXXXXXX_key -iv $encrypted_XXXXXXXXXX_iv
    -in deploy/settings-security.xml.enc -out ~/.m2/settings-security.xml -d
  # Setup the code signing key; it will be used to publish snapshots and releases
  - openssl aes-256-cbc -K $encrypted_XXXXXXXXXX_key -iv $encrypted_XXXXXXXXXX_iv
    -in deploy/code-signing-key.asc.enc -out /tmp/code-signing-key.asc -d
  - gpg --batch --no-default-keyring --allow-secret-key-import --import /tmp/code-signing-key.asc
  - rm /tmp/code-signing-key.asc
  # Setup the github deploy key as the default SSH key
  - openssl aes-256-cbc -K $encrypted_XXXXXXXXXX_key -iv $encrypted_XXXXXXXXXX_iv
    -in deploy/id_rsa.enc -out ~/.ssh/id_rsa -d
  - chmod 400 ~/.ssh/id_rsa

# Pre-download all maven dependencies
install: mvn -e -B -ntp -s deploy/settings.xml -P ossrh dependency:go-offline

# Integrate the latest and deploy snapshot artifacts to OSSRH. The script
# returns a success exit code to ensure build proceeds to deploy stage
script: deploy/deploy-branch.sh

# Perform a release when the master branch has been tagged
deploy:
  - provider: script
    script: deploy/release-tag.sh
    cleanup: false
    on:
      tags: true
      branch: master
